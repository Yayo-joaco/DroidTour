<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/droidtour/ClientRegistrationActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/droidtour/ClientRegistrationActivity.java" />
              <option name="originalContent" value="package com.example.droidtour;&#10;&#10;import android.app.DatePickerDialog;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.MenuItem;&#10;import android.widget.ArrayAdapter;&#10;import android.widget.AutoCompleteTextView;&#10;import android.widget.EditText;&#10;import android.widget.Toast;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import com.google.android.material.appbar.MaterialToolbar;&#10;import com.google.android.material.button.MaterialButton;&#10;import com.google.android.material.textfield.TextInputEditText;&#10;import com.hbb20.CountryCodePicker;&#10;import java.util.Calendar;&#10;&#10;public class ClientRegistrationActivity extends AppCompatActivity {&#10;&#10;    private TextInputEditText etNombres, etApellidos, etNumeroDocumento,&#10;            etFechaNacimiento, etCorreo;&#10;    private AutoCompleteTextView etDocumento;  // Cambiado a AutoCompleteTextView&#10;    private EditText etTelefono;&#10;    private MaterialButton btnSiguiente;&#10;    private MaterialToolbar toolbar;&#10;    private CountryCodePicker ccp;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_client_registration);&#10;&#10;        initializeViews();&#10;        setupToolbar();&#10;        setupDocumentTypeSpinner();  // Nuevo método&#10;        setupCountryCodePicker();&#10;        setupClickListeners();&#10;    }&#10;&#10;    private void initializeViews() {&#10;        toolbar = findViewById(R.id.toolbar);&#10;        etNombres = findViewById(R.id.etNombres);&#10;        etApellidos = findViewById(R.id.etApellidos);&#10;        etDocumento = findViewById(R.id.etDocumento);&#10;        etNumeroDocumento = findViewById(R.id.etNumeroDocumento);&#10;        etFechaNacimiento = findViewById(R.id.etFechaNacimiento);&#10;        etCorreo = findViewById(R.id.etCorreo);&#10;        etTelefono = findViewById(R.id.etTelefono);&#10;        btnSiguiente = findViewById(R.id.btnSiguiente);&#10;        ccp = findViewById(R.id.ccp);&#10;    }&#10;&#10;    private void setupToolbar() {&#10;        setSupportActionBar(toolbar);&#10;        if (getSupportActionBar() != null) {&#10;            getSupportActionBar().setDisplayHomeAsUpEnabled(true);&#10;            getSupportActionBar().setTitle(&quot;Registro de Cliente&quot;);&#10;        }&#10;    }&#10;&#10;    private void setupDocumentTypeSpinner() {&#10;        String[] documentTypes = {&quot;DNI&quot;, &quot;Carnet de Extranjería&quot;};&#10;        ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;&gt;(&#10;                this,&#10;                android.R.layout.simple_dropdown_item_1line,&#10;                documentTypes&#10;        );&#10;        etDocumento.setAdapter(adapter);&#10;&#10;        // Opcional: establecer valor por defecto&#10;        // etDocumento.setText(&quot;DNI&quot;, false);&#10;    }&#10;&#10;    private void setupCountryCodePicker() {&#10;        ccp.registerCarrierNumberEditText(etTelefono);&#10;        ccp.setDefaultCountryUsingNameCode(&quot;PE&quot;);&#10;        ccp.resetToDefaultCountry();&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        etFechaNacimiento.setOnClickListener(v -&gt; showDatePicker());&#10;&#10;        btnSiguiente.setOnClickListener(v -&gt; {&#10;            if (validateForm()) {&#10;                proceedToNext();&#10;            }&#10;        });&#10;    }&#10;&#10;    private void showDatePicker() {&#10;        Calendar calendar = Calendar.getInstance();&#10;        DatePickerDialog datePickerDialog = new DatePickerDialog(&#10;                this,&#10;                (view, year, month, dayOfMonth) -&gt; {&#10;                    String date = String.format(&quot;%02d/%02d/%d&quot;, dayOfMonth, month + 1, year);&#10;                    etFechaNacimiento.setText(date);&#10;                },&#10;                calendar.get(Calendar.YEAR),&#10;                calendar.get(Calendar.MONTH),&#10;                calendar.get(Calendar.DAY_OF_MONTH)&#10;        );&#10;        datePickerDialog.show();&#10;    }&#10;&#10;    private boolean validateForm() {&#10;        if (etNombres.getText().toString().trim().isEmpty()) {&#10;            etNombres.setError(&quot;Campo obligatorio&quot;);&#10;            etNombres.requestFocus();&#10;            return false;&#10;        }&#10;&#10;        if (etApellidos.getText().toString().trim().isEmpty()) {&#10;            etApellidos.setError(&quot;Campo obligatorio&quot;);&#10;            etApellidos.requestFocus();&#10;            return false;&#10;        }&#10;&#10;        if (etDocumento.getText().toString().trim().isEmpty()) {&#10;            etDocumento.setError(&quot;Seleccione tipo de documento&quot;);&#10;            etDocumento.requestFocus();&#10;            return false;&#10;        }&#10;&#10;        if (etNumeroDocumento.getText().toString().trim().isEmpty()) {&#10;            etNumeroDocumento.setError(&quot;Campo obligatorio&quot;);&#10;            etNumeroDocumento.requestFocus();&#10;            return false;&#10;        }&#10;&#10;        if (etFechaNacimiento.getText().toString().trim().isEmpty()) {&#10;            etFechaNacimiento.setError(&quot;Campo obligatorio&quot;);&#10;            etFechaNacimiento.requestFocus();&#10;            return false;&#10;        }&#10;&#10;        if (etCorreo.getText().toString().trim().isEmpty()) {&#10;            etCorreo.setError(&quot;Campo obligatorio&quot;);&#10;            etCorreo.requestFocus();&#10;            return false;&#10;        }&#10;&#10;        if (!android.util.Patterns.EMAIL_ADDRESS.matcher(etCorreo.getText().toString()).matches()) {&#10;            etCorreo.setError(&quot;Correo electrónico inválido&quot;);&#10;            etCorreo.requestFocus();&#10;            return false;&#10;        }&#10;&#10;        if (etTelefono.getText().toString().trim().isEmpty()) {&#10;            etTelefono.setError(&quot;Campo obligatorio&quot;);&#10;            etTelefono.requestFocus();&#10;            return false;&#10;        }&#10;&#10;        if (!ccp.isValidFullNumber()) {&#10;            etTelefono.setError(&quot;Número de teléfono inválido&quot;);&#10;            etTelefono.requestFocus();&#10;            return false;&#10;        }&#10;&#10;        return true;&#10;    }&#10;&#10;    private void proceedToNext() {&#10;        String nombres = etNombres.getText().toString().trim();&#10;        String apellidos = etApellidos.getText().toString().trim();&#10;        String tipoDocumento = etDocumento.getText().toString().trim();&#10;        String numeroDocumento = etNumeroDocumento.getText().toString().trim();&#10;        String fechaNacimiento = etFechaNacimiento.getText().toString().trim();&#10;        String correo = etCorreo.getText().toString().trim();&#10;        String fullPhoneNumber = ccp.getFullNumberWithPlus();&#10;&#10;        // Navegar a la actividad de foto y pasar los datos necesarios&#10;        Intent intent = new Intent(this, ClientRegistrationPhotoActivity.class);&#10;        intent.putExtra(&quot;nombres&quot;, nombres);&#10;        intent.putExtra(&quot;apellidos&quot;, apellidos);&#10;        intent.putExtra(&quot;correo&quot;, correo);&#10;        intent.putExtra(&quot;tipoDocumento&quot;, tipoDocumento);&#10;        intent.putExtra(&quot;numeroDocumento&quot;, numeroDocumento);&#10;        intent.putExtra(&quot;fechaNacimiento&quot;, fechaNacimiento);&#10;        intent.putExtra(&quot;telefono&quot;, fullPhoneNumber);&#10;        startActivity(intent);&#10;    }&#10;&#10;    @Override&#10;    public boolean onOptionsItemSelected(MenuItem item) {&#10;        if (item.getItemId() == android.R.id.home) {&#10;            finish();&#10;            return true;&#10;        }&#10;        return super.onOptionsItemSelected(item);&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.example.droidtour;&#10;&#10;import android.app.DatePickerDialog;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.MenuItem;&#10;import android.widget.ArrayAdapter;&#10;import android.widget.AutoCompleteTextView;&#10;import android.widget.EditText;&#10;import android.widget.Toast;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import com.google.android.material.appbar.MaterialToolbar;&#10;import com.google.android.material.button.MaterialButton;&#10;import com.google.android.material.textfield.TextInputEditText;&#10;import com.hbb20.CountryCodePicker;&#10;import java.util.Calendar;&#10;&#10;public class ClientRegistrationActivity extends AppCompatActivity {&#10;&#10;    private TextInputEditText etNombres, etApellidos, etNumeroDocumento,&#10;            etFechaNacimiento, etCorreo;&#10;    private AutoCompleteTextView etDocumento;  // Cambiado a AutoCompleteTextView&#10;    private EditText etTelefono;&#10;    private MaterialButton btnSiguiente;&#10;    private MaterialToolbar toolbar;&#10;    private CountryCodePicker ccp;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_client_registration);&#10;&#10;        initializeViews();&#10;        setupToolbar();&#10;        setupDocumentTypeSpinner();  // Nuevo método&#10;        setupCountryCodePicker();&#10;        setupClickListeners();&#10;    }&#10;&#10;    private void initializeViews() {&#10;        toolbar = findViewById(R.id.toolbar);&#10;        etNombres = findViewById(R.id.etNombres);&#10;        etApellidos = findViewById(R.id.etApellidos);&#10;        etDocumento = findViewById(R.id.etDocumento);&#10;        etNumeroDocumento = findViewById(R.id.etNumeroDocumento);&#10;        etFechaNacimiento = findViewById(R.id.etFechaNacimiento);&#10;        etCorreo = findViewById(R.id.etCorreo);&#10;        etTelefono = findViewById(R.id.etTelefono);&#10;        btnSiguiente = findViewById(R.id.btnSiguiente);&#10;        ccp = findViewById(R.id.ccp);&#10;    }&#10;&#10;    private void setupToolbar() {&#10;        setSupportActionBar(toolbar);&#10;        if (getSupportActionBar() != null) {&#10;            getSupportActionBar().setDisplayHomeAsUpEnabled(true);&#10;            getSupportActionBar().setTitle(&quot;Registro de Cliente&quot;);&#10;        }&#10;    }&#10;&#10;    private void setupDocumentTypeSpinner() {&#10;        String[] documentTypes = {&quot;DNI&quot;, &quot;Carnet de Extranjería&quot;};&#10;        ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;&gt;(&#10;                this,&#10;                android.R.layout.simple_dropdown_item_1line,&#10;                documentTypes&#10;        );&#10;        etDocumento.setAdapter(adapter);&#10;&#10;        // Opcional: establecer valor por defecto&#10;        // etDocumento.setText(&quot;DNI&quot;, false);&#10;    }&#10;&#10;    private void setupCountryCodePicker() {&#10;        ccp.registerCarrierNumberEditText(etTelefono);&#10;        ccp.setDefaultCountryUsingNameCode(&quot;PE&quot;);&#10;        ccp.resetToDefaultCountry();&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        etFechaNacimiento.setOnClickListener(v -&gt; showDatePicker());&#10;&#10;        btnSiguiente.setOnClickListener(v -&gt; {&#10;            if (validateForm()) {&#10;                proceedToNext();&#10;            }&#10;        });&#10;    }&#10;&#10;    private void showDatePicker() {&#10;        Calendar calendar = Calendar.getInstance();&#10;        DatePickerDialog datePickerDialog = new DatePickerDialog(&#10;                this,&#10;                (view, year, month, dayOfMonth) -&gt; {&#10;                    String date = String.format(&quot;%02d/%02d/%d&quot;, dayOfMonth, month + 1, year);&#10;                    etFechaNacimiento.setText(date);&#10;                },&#10;                calendar.get(Calendar.YEAR),&#10;                calendar.get(Calendar.MONTH),&#10;                calendar.get(Calendar.DAY_OF_MONTH)&#10;        );&#10;        datePickerDialog.show();&#10;    }&#10;&#10;    private boolean validateForm() {&#10;        if (etNombres.getText().toString().trim().isEmpty()) {&#10;            etNombres.setError(&quot;Campo obligatorio&quot;);&#10;            etNombres.requestFocus();&#10;            return false;&#10;        }&#10;&#10;        if (etApellidos.getText().toString().trim().isEmpty()) {&#10;            etApellidos.setError(&quot;Campo obligatorio&quot;);&#10;            etApellidos.requestFocus();&#10;            return false;&#10;        }&#10;&#10;        if (etDocumento.getText().toString().trim().isEmpty()) {&#10;            etDocumento.setError(&quot;Seleccione tipo de documento&quot;);&#10;            etDocumento.requestFocus();&#10;            return false;&#10;        }&#10;&#10;        if (etNumeroDocumento.getText().toString().trim().isEmpty()) {&#10;            etNumeroDocumento.setError(&quot;Campo obligatorio&quot;);&#10;            etNumeroDocumento.requestFocus();&#10;            return false;&#10;        }&#10;&#10;        if (etFechaNacimiento.getText().toString().trim().isEmpty()) {&#10;            etFechaNacimiento.setError(&quot;Campo obligatorio&quot;);&#10;            etFechaNacimiento.requestFocus();&#10;            return false;&#10;        }&#10;&#10;        if (etCorreo.getText().toString().trim().isEmpty()) {&#10;            etCorreo.setError(&quot;Campo obligatorio&quot;);&#10;            etCorreo.requestFocus();&#10;            return false;&#10;        }&#10;&#10;        if (!android.util.Patterns.EMAIL_ADDRESS.matcher(etCorreo.getText().toString()).matches()) {&#10;            etCorreo.setError(&quot;Correo electrónico inválido&quot;);&#10;            etCorreo.requestFocus();&#10;            return false;&#10;        }&#10;&#10;        if (etTelefono.getText().toString().trim().isEmpty()) {&#10;            etTelefono.setError(&quot;Campo obligatorio&quot;);&#10;            etTelefono.requestFocus();&#10;            return false;&#10;        }&#10;&#10;        if (!ccp.isValidFullNumber()) {&#10;            etTelefono.setError(&quot;Número de teléfono inválido&quot;);&#10;            etTelefono.requestFocus();&#10;            return false;&#10;        }&#10;&#10;        return true;&#10;    }&#10;&#10;    private void proceedToNext() {&#10;        String nombres = etNombres.getText().toString().trim();&#10;        String apellidos = etApellidos.getText().toString().trim();&#10;        String tipoDocumento = etDocumento.getText().toString().trim();&#10;        String numeroDocumento = etNumeroDocumento.getText().toString().trim();&#10;        String fechaNacimiento = etFechaNacimiento.getText().toString().trim();&#10;        String correo = etCorreo.getText().toString().trim();&#10;        String fullPhoneNumber = ccp.getFullNumberWithPlus();&#10;&#10;        // Navegar a la actividad de foto y pasar los datos necesarios&#10;        Intent intent = new Intent(this, ClientRegistrationPhotoActivity.class);&#10;        intent.putExtra(&quot;nombres&quot;, nombres);&#10;        intent.putExtra(&quot;apellidos&quot;, apellidos);&#10;        intent.putExtra(&quot;correo&quot;, correo);&#10;        intent.putExtra(&quot;tipoDocumento&quot;, tipoDocumento);&#10;        intent.putExtra(&quot;numeroDocumento&quot;, numeroDocumento);&#10;        intent.putExtra(&quot;fechaNacimiento&quot;, fechaNacimiento);&#10;        intent.putExtra(&quot;telefono&quot;, fullPhoneNumber);&#10;        startActivity(intent);&#10;    }&#10;&#10;    @Override&#10;    public boolean onOptionsItemSelected(MenuItem item) {&#10;        if (item.getItemId() == android.R.id.home) {&#10;            finish();&#10;            return true;&#10;        }&#10;        return super.onOptionsItemSelected(item);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>